syntax on                           "lots of syntax highlighting
set nocompatible                    "be iMproved
colorscheme mustang

" General Preferences
set incsearch                       "search as you type
set hlsearch                        "highlight the search
set ignorecase                      "ignore case...
set smartcase                       "unless the search uses uppercase letters
set gdefault                        "apply substitutions globally (whole line) by default
set wildmode=longest:full           "make filename completion like the terminal...
set wildmenu                        "and enable the tab-completion menu
set wildignore=*.bak,*.tmp,*.sw[pno]
set whichwrap=b,s,h,l,<,>,~,[,]     "moving left and right will wrap around to next/prev line
set backspace=indent,eol,start      "backspace will delete whatever is behind your cursor and wrap
set visualbell                      "turn off the audible beep
set modeline                        "let files give hints for syntax and whatnot
set formatoptions-=cro              "don't wrap my comments and don't automatically assume the next line is a comment.
                                    "you may need to override this in format specific file types.
set showcmd                         "display partial commands
set showmatch                       "show matching brackets briefly
set scrolloff=5                     "leave a little context around the current line when scrolling.
let mapleader=","                   "change the leader key to be ',' to make it easier to hit.

" MacVim gui specific settings
if has('gui_running')
  set guifont=Monaco:h12            "set fonts for gui vim
  set transparency=5                "set transparent window
  set guioptions=egmrt              "hide the gui menubar
  set noantialias                   "turn off antialiasing - it makes things look really blurry.
endif

" Add window switching support using Control-hjklq
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-H> <C-W>h
nnoremap <C-L> <C-W>l
nnoremap <C-Q> <C-W>q

" Highlight extra space at the end of lines, etc...
highlight RedundantWhitespace ctermbg=red guibg=darkred
match RedundantWhitespace /\s\+$\|\t/

" Quick buffer switching with TAB, even with edited files
set hidden                          "Let me switch buffers even with modifications
nmap <C-TAB> :bn<CR>
nmap <C-S-TAB> :bp<CR>
set autoread                        "auto-reload files, if there's no conflict

" Indentation Stuff
set expandtab                       "use spaces, not tabs
set softtabstop=2 shiftwidth=2      "2-space indents
set shiftround                      "always use a multiple of 4 for indents
set smarttab                        "backspace to remove space-indents
set autoindent                      "auto-indent for code blocks
"DONT USE: smartindent              "it does stupid things with comments

"smart indenting by filetype, better than smartindent and required for vundle
filetype on
filetype indent on
filetype plugin on

" Multicursor Settings
xnoremap <leader>mc :<c-u>call MultiCursorVisual()<cr>
nnoremap <leader>ms :<c-u>call MultiCursorSearch('')<cr>
let g:multicursor_quit = "<C-A-K>"

" Powerline Requirements
set nocompatible                    " Disable vi-compatibility
set laststatus=2                    " Always show the statusline
set encoding=utf-8                  " Necessary to show Unicode glyphs

" Restrict closetag to certain filetypes
autocmd FileType html,htmldjango,jinjahtml,mako let b:closetag_html_style=1
autocmd FileType html,xhtml,xml,htmldjango,jinjahtml,mako source ~/.vim/bundle/closetag/plugin/closetag.vim

" ------------------------------------------------------
"  Some convenient key configs...
" Map . to jump back to where editing started after repeating the last command.
nmap . .`[

" Some Ctrl-P goodness from http://vimcasts.org/e/14
cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>F :CtrlP %%<cr>
map <leader>b :CtrlPBuffer<cr>

" Switch CWD to the directory of the open buffer
map <leader>cd :cd %:p:h<cr>:pwd<cr>

" Pressing <leader>ss will toggle and untoggle spell checking
map <leader>ss :setlocal spell!<cr>

" Toggle paste mode on and off
map <leader>pp :setlocal paste!<cr>

let g:ctrlp_root_markers = ['.git', 'tags']
" clear the search buffer when hitting return
:nnoremap <CR> :nohlsearch<cr>

" ==============================================
" Load any private configuration
if filereadable(glob("~/.vimrc.private")) 
    source ~/.vimrc.private
endif

" ==============================================
" Vundle setup and initialization.

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

" ==============================================
" My Bundles here:
" Powerline
Bundle 'Lokaltog/vim-powerline'
" Fuzzy file finding (Control-P)
Bundle 'kien/ctrlp.vim'
" Auto tag closing for HTML, XML, etc.
Bundle 'docunext/closetag.vim'
" Jump around documents like it's your J.O.B.
Bundle 'Lokaltog/vim-easymotion'
" Multiple cursor support a-la sublime
Bundle 'paradigm/vim-multicursor'
" Multifile grep search and replace support
Bundle 'skwp/greplace.vim'
" Ninja Ruby support
Bundle 'vim-ruby/vim-ruby'
" Judo Rails support
Bundle 'tpope/vim-rails'
" Matchit to let % match method start ends, tags, etc.
Bundle 'vim-scripts/matchit.zip'
" Bundler support
Bundle 'tpope/vim-bundler'
" Cucumber support
Bundle 'tpope/vim-cucumber'
" Add appropriate keywords after if, do, etc.
Bundle 'tpope/vim-endwise'
" Comment / uncomment
Bundle 'tpope/vim-commentary'
" Git support in vim
Bundle 'tpope/vim-fugitive'
" Evernote support - Note you'll need to install this: https://pypi.python.org/pypi/Markdown
Bundle 'kakkyz81/evervim'
" Tree browsing goodness
Bundle 'scrooloose/nerdtree'
" Add surround support to surround text with stuff.
Bundle 'tpope/vim-surround'

" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..
