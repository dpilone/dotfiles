syntax on
set nocompatible               " be iMproved
filetype off                   " required!
colorscheme koehler
set incsearch		"search as you type
set hlsearch		"highlight the search
set ignorecase		"ignore case...
set smartcase		"unless the search uses uppercase letters
set wildmode=longest:full "make filename completion like the terminal...
set wildmenu		"and enable the tab-completion menu
set wildignore=*.bak,*.tmp,*.sw[pno]
set whichwrap=b,s,h,l,<,>,~,[,] "Moving left and right will wrap around to next/prev line
set backspace=indent,eol,start 	"Backspace will delete whatever is behind your cursor and wrap
set visualbell		"turn off the audible beep
set modeline		"Let files give hints for syntax and whatnot

" Fix up some commands to make things a little more usable
" Window switching
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-H> <C-W>h
nnoremap <C-L> <C-W>l
nnoremap <C-Q> <C-W>q

"be smarter about multiple buffers / vim instances
"quick buffer switching with TAB, even with edited files
set hidden              "Let me switch buffers even with modifications
nmap <C-TAB> :bn<CR> 
nmap <C-S-TAB> :bp<CR>
set autoread            "auto-reload files, if there's no conflict

"Indentation Stuff
set expandtab                       "use spaces, not tabs
set softtabstop=2 shiftwidth=2      "2-space indents
set shiftround                      "always use a multiple of 4 for indents
set smarttab                        "backspace to remove space-indents
set autoindent                      "auto-indent for code blocks
"DONT USE: smartindent              "it does stupid things with comments

"smart indenting by filetype, better than smartindent
filetype on
filetype indent on
filetype plugin on

" Multicursor Settings
xnoremap <C-L> :<c-u>call MultiCursorVisual()<cr>
nnoremap <C-I> :<c-u>call MultiCursorSearch('')<cr>
let g:multicursor_quit = "<C-A-K>"

" Powerline Requirements
set nocompatible   " Disable vi-compatibility
set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs

" Restrict closetag to certain filetypes
autocmd FileType html,htmldjango,jinjahtml,mako let b:closetag_html_style=1
autocmd FileType html,xhtml,xml,htmldjango,jinjahtml,mako source ~/.vim/bundle/closetag/plugin/closetag.vim

" ----------------------------------------------
" For Vundler
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'
" ----------------------------------------------

" My Bundles here:
Bundle 'Lokaltog/vim-powerline' 
Bundle 'kien/ctrlp.vim' 
Bundle 'docunext/closetag.vim' 
Bundle 'Lokaltog/vim-easymotion' 
Bundle 'paradigm/vim-multicursor'
Bundle 'skwp/greplace.vim'

" original repos on github
" Bundle 'tpope/vim-fugitive'
" Bundle 'Lokaltog/vim-easymotion'
" Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
" Bundle 'tpope/vim-rails.git'
" vim-scripts repos
" Bundle 'L9'
" Bundle 'FuzzyFinder'
" non github repos
" Bundle 'git://git.wincent.com/command-t.git'
" ...

filetype plugin indent on     " required!
"
" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..
